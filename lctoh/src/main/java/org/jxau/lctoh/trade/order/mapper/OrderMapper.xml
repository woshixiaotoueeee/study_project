<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:需与接口的完全限定名保持一致 -->
<mapper namespace="org.jxau.lctoh.trade.order.mapper.OrderMapper">
	<!-- 数据库表与实体类相对应的resultMap -->
	<resultMap type="Order" id="OrderResultMap">
	    <id property="orderId" column="order_id"/>
	    <result property="orderCreatTime" column="order_creat_time"/>
		<result property="order_price" column="orderPrice"/>
		<result property="orderUpdateTiame" column="order_update_tiame"/>
		<result property="orderDeliveryTime" column="order_delivery_time"/>
		<association property="orderState" column="order_state_id" select="org.jxau.lctoh.state.mapper.StateMapper.findStateByStateId"/>
		<association property="orderCustomer" column="order_customer_id" select="org.jxau.lctoh.user.customer.mapper.CustomerMapper.findCustomerByCustomerId"/>
		<association property="orderRestaurant" column="order_restaurant_id" select="org.jxau.lctoh.user.restaurant.mapper.RestaurantMapper.findRestaurantByRestaurantId"/>
		<association property="orderHarvestAddress" column="orderId" select="org.jxau.lctoh.trade.order.mapper.HarvestAddressMapper.findHarvestAddressByhaid"/>
	</resultMap>
	
	<sql id="OrderColumns">
		orders.order_id,
		orders.order_creat_time,
		orders.order_price,
		orders.order_update_tiame,
		orders.order_delivery_time,
		orders.order_state_id,
		orders.order_customer_id,
		orders.order_restaurant_id
	</sql>
	
	
	<!--根据订单识别码查询订单-->
	<select id="findOrderByOrderId" parameterType="String" resultMap="OrderResultMap">
		select
			<include refid="OrderColumns"></include>
		from
			orders
		where
			orders.order_delete_or_not=1
			and orders.order_id =#{orderId}
	</select>

	<!--根据客户识别码查询订单-->
	<select id="findOrderByCustmerId" parameterType="String" resultMap="OrderResultMap">
		select
			<include refid="OrderColumns"></include>
		from
			orders
		where
			orders.order_delete_or_not=1
			and orders.order_customer_id =#{custmerId}
		order by orders.order_creat_time desc
	</select>
	
	<!--根据店家识别码查询订单-->
	<select id="findOrderByRestaurantId" parameterType="String" resultMap="OrderResultMap">
		select
			<include refid="OrderColumns"></include>
		from
			orders
		where
			orders.order_delete_or_not=1
			and orders.order_restaurant_id =#{restaurantId}
		order by orders.order_creat_time desc
	</select>

	
	<!--更新订单-->
	<update id="updateOrder" parameterType="Order">
		update 
			orders
		set
			orders.order_creat_time=#{orderCreatTime},
			orders.order_price=#{orderPrice},
			orders.order_update_tiame=#{orderUpdateTiame},
			orders.order_delivery_time=#{orderDeliveryTime},
			orders.order_state_id=#{orderState.sateId},
			orders.order_customer_id=#{orderCustomer.customerId},
			orders.order_restaurant_id=#{orderRestaurant.restaurantId}
		where
			 orders.order_id =#{orderId}
	</update>
	
	<!--添加订单-->
	<insert id="addOrder" parameterType="Order">
		insert into orders(
			orders.order_id,
			orders.order_creat_time,
			orders.order_price,
			orders.order_update_tiame,
			orders.order_delivery_time,
			orders.order_state_id,
			orders.order_customer_id,
			orders.order_restaurant_id
		)
		values(
			#{orderId},
			#{orderCreatTime},
			#{orderPrice},
			#{orderUpdateTiame},
			#{orderDeliveryTime},
			#{orderState.sateId},
			#{orderCustomer.customerId},
			#{orderRestaurant.restaurantId}
		)
	</insert>
	
	
	<!-- 时间段+客户或店家识别码 -->
	<select id="findOrder"  resultMap="OrderResultMap">
		select
			<include refid="OrderColumns"></include>
		from
			orders
		where
			orders.order_delete_or_not=1
			<if test="stm != null and stm ==''" >
				rt.recording_time_id&gt;=str_to_date(#{stm},'%Y-%m-%d %H:%i:%s')
			</if>
			<if test="etm != null and etm ==''" >
				and rt.recording_time_id&lt;=str_to_date(#{etm},'%Y-%m-%d %H:%i:%s')
			</if>
			<if test="customerId != null and customerId ==''" >
				and orders.order_customer_id=#{customerId}
			</if>
			<if test="restaurantId != null and restaurantId ==''" >
				and orders.order_restaurant_id=#{restaurantId}
			</if>
		order by orders.order_creat_time desc
	</select>
	
	<!-- 所售单数 -->
	<select id="getCountOrder"  resultType="Integer">
		select
			count(*) orderCount
		from
			orders
		where
			orders.order_restaurant_id=#{restaurantId}
	</select>
	
	
</mapper>